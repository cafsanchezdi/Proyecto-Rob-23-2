MODULE Module1
    ! Constantes
    CONST num q1Estanteria:=0.27059805;
    CONST num q2Estanteria:=0.653281482;
    CONST num q3Estanteria:=0.27059805;
    CONST num q4Estanteria:=0.653281482;
    CONST num q1Banda:=0.653281482;
    CONST num q2Banda:=0.653281482;
    CONST num q3Banda:=-0.27059805;
    CONST num q4Banda:=0.27059805;
    CONST num lejaniaEstanteria:=545;
    CONST num zonaAlta:=902;
    CONST num zonaMedia:=558;
    CONST num zonaBaja:=241;
    CONST num zonaIzq:=119;
    CONST num zonaDer:=-92;
    CONST num lejaniaBanda:=-388;
    CONST num alturaBanda:=335;
    CONST num zonaBandaIzq:=136;
    CONST num zonaBandaCentro:=-72;
    CONST num zonaBandaDer:=-220;
    CONST num distanciaAcercar:=595 - 545;
    CONST num distanciaAcercarBanda:=520 - 388;
    CONST bool abrirGarra:=TRUE;
    
    ! Posiciones articulares de interés
    CONST jointtarget home:=[[0,-43,35,0,0,135],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget banda1:=[[-66,22,45,29,-66,127],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget banda2:=[[-90,22,44,3,-62,137],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget banda3:=[[-117,26,36,-28,-62,150],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar1:=[[18,1,-27,-42,28,180],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar2:=[[-10,-1,-25,24,24,122],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar3:=[[23,0.5,23,53,-33,83],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar4:=[[-12,-6,29,-26,-23,154],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar5:=[[22,45,29,26,-73,123],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget acercar6:=[[-11,43,33,-9,-75,132],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    ! Posiciones absolutas (vistas por la base) de la estantería
    !  -----------
    ! |  1  |  2  |
    !  -----------
    ! |  3  |  4  |
    !  -----------
    ! |  5  |  6  |
    !  -----------
    CONST num x1:=lejaniaEstanteria;
    CONST num y1:=zonaIzq;
    CONST num z1:=zonaAlta;
    CONST num x2:=lejaniaEstanteria;
    CONST num y2:=zonaDer;
    CONST num z2:=zonaAlta;
    CONST num x3:=lejaniaEstanteria;
    CONST num y3:=zonaIzq;
    CONST num z3:=zonaMedia;
    CONST num x4:=lejaniaEstanteria;
    CONST num y4:=zonaDer;
    CONST num z4:=zonaMedia;
    CONST num x5:=lejaniaEstanteria;
    CONST num y5:=zonaIzq;
    CONST num z5:=zonaBaja;
    CONST num x6:=lejaniaEstanteria;
    CONST num y6:=zonaDer;
    CONST num z6:=zonaBaja;
    
    ! Posiciones absolutas (vistas por la base) de la banda
    !  -----------------
    ! |  1  |  2  |  3  |
    !  -----------------
    CONST num xB1:=zonaBandaIzq;
    CONST num yB1:=lejaniaBanda;
    CONST num zB1:=alturaBanda;
    CONST num xB2:=zonaBandaCentro;
    CONST num yB2:=lejaniaBanda;
    CONST num zB2:=alturaBanda;
    CONST num xB3:=zonaBandaDer;
    CONST num yB3:=lejaniaBanda;
    CONST num zB3:=alturaBanda;
    
    ! Variables para control
    PERS robtarget Target_Estanteria:=[[0,0,0],[0,0,0,0],[0,-1,1,0],[9E+9,9E+9,9E+9,9E+9,9E+9,9E+9]];
    PERS robtarget Target_Banda:=[[0,0,0],[0,0,0,0],[0,-1,1,0],[9E+9,9E+9,9E+9,9E+9,9E+9,9E+9]];
    PERS robtarget Target_Agarrar:=[[0,0,0],[0,0,0,0],[0,-2,1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget Target_Dejar:=[[0,0,0],[0,0,0,0],[0,-2,1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS num posControl:=0;
    PERS string gripperOptions{2} := [ "Chupa", "Garra" ];
    PERS string gripperOption := "Chupa";
    PERS num objetosEnBanda:=0;
    PERS bool DO_Dejar:=FALSE;
    PERS bool DO_Home:=FALSE;
    PERS bool DO_IrHome:=FALSE;
    PERS bool DO_Mover:=FALSE;
    PERS bool DO_Recoger:=FALSE;
    PERS bool DO_STOP:=FALSE;
    
    PROC main()
        posControl:=0;
        WHILE TRUE DO
            IF DO_IrHome THEN
                Homming;
                DO_Home:=TRUE;
                DO_STOP:=FALSE;
                DO_IrHome:=FALSE;
            ENDIF
            TareaPrincipal(posControl);
        ENDWHILE
    ENDPROC
    PROC Homming()
        TPWrite "INICIO: Homming";
        MoveAbsJ home, v100, fine, tool0;
        TPWrite "FIN: Homming";
    ENDPROC
    PROC AgarrarGarra()
        TPWrite "INICIO: AgarrarGarra";
        DO_Recoger:=TRUE;
        Target_Agarrar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Agarrar.trans.x:=Target_Agarrar.trans.x + distanciaAcercar;
        MoveL Target_Agarrar,v50,fine,tool0\WObj:=wobj0; 
        ControlGripper(abrirGarra);
        Target_Agarrar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Agarrar.trans.x:=Target_Agarrar.trans.x - distanciaAcercar;
        MoveL Target_Agarrar,v50,fine,tool0\WObj:=wobj0; 
        DO_Recoger:=FALSE;
        TPWrite "FIN: AgarrarGarra";
    ENDPROC
    PROC AgarrarChupa()
        TPWrite "INICIO: AgarrarChupa";
        DO_Recoger:=TRUE;
        Target_Agarrar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Agarrar.trans.x:=Target_Agarrar.trans.x + distanciaAcercar;
        MoveL Target_Agarrar,v50,fine,tool0\WObj:=wobj0; 
        ControlGripper(not abrirGarra);
        Target_Agarrar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Agarrar.trans.x:=Target_Agarrar.trans.x - distanciaAcercar;
        MoveL Target_Agarrar,v50,fine,tool0\WObj:=wobj0; 
        DO_Recoger:=FALSE;
        TPWrite "FIN: AgarrarChupa";
    ENDPROC
    PROC DejarGarra()
        TPWrite "INICIO: DejarGarra";
        DO_Dejar:=TRUE;
        Target_Dejar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Dejar.trans.y:=Target_Dejar.trans.y - distanciaAcercarBanda;
        MoveL Target_Dejar,v50,fine,tool0\WObj:=wobj0; 
        ControlGripper(not abrirGarra);
        Target_Dejar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Dejar.trans.y:=Target_Dejar.trans.y + distanciaAcercarBanda;
        MoveL Target_Dejar,v50,fine,tool0\WObj:=wobj0; 
        DO_Dejar:=FALSE;
        TPWrite "FIN: DejarGarra";
    ENDPROC
    PROC DejarChupa()
        TPWrite "INICIO: DejarChupa";
        DO_Dejar:=TRUE;
        Target_Dejar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Dejar.trans.y:=Target_Dejar.trans.y - distanciaAcercarBanda;
        MoveL Target_Dejar,v50,fine,tool0\WObj:=wobj0; 
        ControlGripper(abrirGarra);
        Target_Dejar:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Dejar.trans.y:=Target_Dejar.trans.y + distanciaAcercarBanda;
        MoveL Target_Dejar,v50,fine,tool0\WObj:=wobj0; 
        DO_Dejar:=FALSE;
        TPWrite "FIN: DejarChupa";
    ENDPROC
    PROC ZonaSegura(num posEstanteria)
        TPWrite "INICIO: ZonaSegura";
        IF posEstanteria = 1 THEN
            MoveAbsJ acercar1, v100, fine, tool0;
        ELSEIF posEstanteria = 2 THEN
            MoveAbsJ acercar2, v100, fine, tool0;
        ELSEIF posEstanteria = 3 THEN
            MoveAbsJ acercar3, v100, fine, tool0;
        ELSEIF posEstanteria = 4 THEN
            MoveAbsJ acercar4, v100, fine, tool0;
        ELSEIF posEstanteria = 5 THEN
            MoveAbsJ acercar5, v100, fine, tool0;
        ELSEIF posEstanteria = 6 THEN
            MoveAbsJ acercar6, v100, fine, tool0;
        ENDIF
        TPWrite "FIN: ZonaSegura";
    ENDPROC
     PROC ZonaSeguraBanda(num posBanda)
        TPWrite "INICIO: ZonaSeguraBanda";
        IF posBanda = 3 THEN
            MoveAbsJ banda1, v100, fine, tool0;
        ELSEIF posBanda = 2 THEN
            MoveAbsJ banda2, v100, fine, tool0;
        ELSEIF posBanda = 1 THEN
            MoveAbsJ banda3, v100, fine, tool0;
        ENDIF
        TPWrite "FIN: ZonaSeguraBanda";
    ENDPROC
    PROC Acercar(num posEstanteria)
        TPWrite "INICIO: Acercar";
        ZonaSegura(posEstanteria);
        Target_Estanteria:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Estanteria.rot.q1:=q1Estanteria;
        Target_Estanteria.rot.q2:=q2Estanteria;
        Target_Estanteria.rot.q3:=q3Estanteria;
        Target_Estanteria.rot.q4:=q4Estanteria;
        IF posEstanteria = 1 THEN
            Target_Estanteria.trans.x:=x1;
            Target_Estanteria.trans.y:=y1;
            Target_Estanteria.trans.z:=z1;
        ELSEIF posEstanteria = 2 THEN
            Target_Estanteria.trans.x:=x2;
            Target_Estanteria.trans.y:=y2;
            Target_Estanteria.trans.z:=z2;
        ELSEIF posEstanteria = 3 THEN
            Target_Estanteria.trans.x:=x3;
            Target_Estanteria.trans.y:=y3;
            Target_Estanteria.trans.z:=z3;
        ELSEIF posEstanteria = 4 THEN
            Target_Estanteria.trans.x:=x4;
            Target_Estanteria.trans.y:=y4;
            Target_Estanteria.trans.z:=z4;
        ELSEIF posEstanteria = 5 THEN
            Target_Estanteria.trans.x:=x5;
            Target_Estanteria.trans.y:=y5;
            Target_Estanteria.trans.z:=z5;
        ELSEIF posEstanteria = 6 THEN
            Target_Estanteria.trans.x:=x6;
            Target_Estanteria.trans.y:=y6;
            Target_Estanteria.trans.z:=z6;
        ELSE
            TPWrite "ERROR: posEstanteria inválido";
            RETURN;
        ENDIF
        MoveJ Target_Estanteria,v50,fine,tool0\WObj:=wobj0;
        TPWrite "FIN: Acercar";
    ENDPROC
    PROC AcercarBanda(num posBanda)
        TPWrite "INICIO: AcercarBanda";
        ZonaSeguraBanda(posBanda);
        Target_Banda:=CRobT(\Tool:=tool0 \WObj:=wobj0);
        Target_Banda.rot.q1:=q1Banda;
        Target_Banda.rot.q2:=q2Banda;
        Target_Banda.rot.q3:=q3Banda;
        Target_Banda.rot.q4:=q4Banda;
        IF posBanda = 3 THEN
            Target_Banda.trans.x:=xB1;
            Target_Banda.trans.y:=yB1;
            Target_Banda.trans.z:=zB1;
        ELSEIF posBanda = 2 THEN
            Target_Banda.trans.x:=xB2;
            Target_Banda.trans.y:=yB2;
            Target_Banda.trans.z:=zB2;
        ELSEIF posBanda = 1 THEN
            Target_Banda.trans.x:=xB3;
            Target_Banda.trans.y:=yB3;
            Target_Banda.trans.z:=zB3;
        ELSE
            TPWrite "ERROR: posBanda inválido";
            RETURN;
        ENDIF
        MoveJ Target_Banda,v50,fine,tool0\WObj:=wobj0;
        TPWrite "FIN: AcercarBanda";
    ENDPROC
    PROC ControlGripper(bool abierto)
        IF abierto THEN
            Set DO_01;
            Reset DO_02;
        ELSE
            Set DO_02;
            Reset DO_01;
        ENDIF
    ENDPROC
    PROC TareaPrincipal(num posEstanteria)
        IF posEstanteria = 0 THEN
            RETURN;
        ENDIF
        DO_Home:=FALSE;
        DO_Mover:=TRUE;
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        Acercar(posEstanteria);
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        IF gripperOption = "Chupa" THEN
            AgarrarChupa;
        ELSEIF gripperOption = "Garra" THEN
            AgarrarGarra;
        ENDIF
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        Homming;
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        AcercarBanda(objetosEnBanda + 1);
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        IF gripperOption = "Chupa" THEN
            DejarChupa;
        ELSEIF gripperOption = "Garra" THEN
            DejarGarra;
        ENDIF
        IF DO_STOP THEN
            DO_Mover:=FALSE;
            posControl:=0;
            RETURN;
        ENDIF
        Homming;
        objetosEnBanda:=objetosEnBanda + 1;
        posControl:=0;
        DO_Mover:=FALSE;
        DO_Home:=TRUE;
    ENDPROC
ENDMODULE